package telegram

import (
	"ada-telegram-bot/pkg/models"
	"ada-telegram-bot/pkg/service"
	"fmt"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func cbqStatistics(b *BotTelegram, cbq *tgbotapi.CallbackQuery) error {
	userId := cbq.Message.Chat.ID
	messageId := cbq.Message.MessageID

	text := "üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "statistics.brief"),
		),
		// tgbotapi.NewInlineKeyboardRow(
		// 	tgbotapi.NewInlineKeyboardButtonData("–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "statistics.full"),
		// ),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start"),
		),
	)
	botMsg := tgbotapi.NewEditMessageTextAndMarkup(userId, messageId, text, keyboard)
	botMsg.ParseMode = tgbotapi.ModeHTML

	if err := b.sendMessage(userId, botMsg); err != nil {
		return fmt.Errorf("error edit msg in cbqStatistics: %w", err)
	}

	return nil
}

func cbqStatisticsBrief(b *BotTelegram, cbq *tgbotapi.CallbackQuery) error {
	userId := cbq.Message.Chat.ID
	messageId := cbq.Message.MessageID

	// –°–±–æ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
	text := "<b>üïê –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:</b>"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í—á–µ—Ä–∞", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeYesterday())),
			tgbotapi.NewInlineKeyboardButtonData("–°–µ–≥–æ–¥–Ω—è", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeToday())),
			tgbotapi.NewInlineKeyboardButtonData("–ó–∞–≤—Ç—Ä–∞", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeTomorrow())),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeThisWeek())),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeThisMonth())),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–¢–µ–∫—É—â–∏–π –≥–æ–¥", "statistics.brief.select?"+service.ParseTimesToRangeDate(service.GetTimeRangeThisYear())),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", "statistics.brief.select?"+service.ParseTimesToRangeDate(models.MinTime, models.MaxTime)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ù–∞–∑–∞–¥", "statistics"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start"),
		),
	)

	botMsg := tgbotapi.NewEditMessageTextAndMarkup(userId, messageId, text, keyboard)
	botMsg.ParseMode = tgbotapi.ModeHTML

	if err := b.sendMessage(userId, botMsg); err != nil {
		return fmt.Errorf("error edit msg in cbqAdEventCreate: %w", err)
	}

	return nil
}

func cbqStatisticsBriefSelect(b *BotTelegram, cbq *tgbotapi.CallbackQuery) error {
	userId := cbq.Message.Chat.ID
	messageId := cbq.Message.MessageID

	_, data, err := parseCbq(cbq)
	if err != nil {
		return err
	}

	dataSlice := strings.Split(data, ";")
	if len(dataSlice) != 2 {
		return fmt.Errorf("dataSlice incorrect. dataSlice: %v", dataSlice)
	}

	startDate, err := service.ParseUserDateToTime(dataSlice[0])
	if err != nil {
		return err
	}
	endDate, err := service.ParseUserDateToTime(dataSlice[1])
	if err != nil {
		return err
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î.
	d, err := b.db.GetRangeDataForStatistics(userId, models.TypeAny, startDate, endDate)
	if err != nil {
		return err
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
	text := createStaticsBriefText(d)
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ù–∞–∑–∞–¥", "statistics.brief"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start"),
		),
	)

	botMsg := tgbotapi.NewEditMessageTextAndMarkup(userId, messageId, text, keyboard)
	botMsg.ParseMode = tgbotapi.ModeHTML
	if err := b.sendMessage(userId, botMsg); err != nil {
		return fmt.Errorf("error edit msg in cbqStatisticsBriefSelect: %w", err)
	}

	return nil
}
